{"version":3,"sources":["App.js","serviceWorker.js","index.js","icons/cart-arrow-down.svg","icons/long-arrow-left.svg","icons/upload-image.svg"],"names":["useStyles","makeStyles","outerContainer","height","display","stageContainerAfterUpload","width","alignContent","alignItems","mobileViewBeforeUpload","buttonContainerAfterUpload","position","bottom","justifyContent","buttonContainerAfterUploadMobile","mobileViewAfterUpload","background","fontFamily","fontStyle","color","border","fontWeight","textTransform","cursor","borderRadius","padding","textAlign","alignSelf","visibility","dispay","Lamp","lampHeight","lampWidth","backgroundImage","data","shapeProps","isSelected","onSelect","onChange","React","useState","lampUrl","setLampUrl","node","images","edges","length","forEach","product","altText","originalSrc","useImage","image","aspectRatio","window","innerHeight","innerWidth","shapeRef","useRef","trRef","useEffect","current","setNode","getLayer","batchDraw","Fragment","crossOrigin","fill","onTap","onClick","ref","draggable","onDragEnd","e","x","target","y","onTransformEnd","scaleX","scaleY","Math","max","enabledAnchors","boundBoxFunc","oldBox","newBox","PictureCollage","productId","variantQuery","productQuery","queryString","location","search","productVariantId","URLSearchParams","get","productVariantIdQuery","btoa","gql","variantData","useQuery","id","classes","canvasStage","createRef","newImage","Image","setBackgroundImage","setImage","selected","setSelected","savePicture","setSavePicture","setInnerWidth","setInnerHeight","shape","setShape","currentOrientation","setCurrentOrientation","offset","setOffset","backgroundCanvasWidth","setBackgroundCanvasWidth","backgroundCanvasHeight","setBackgroundCanvasHeight","changeOrientation","matchMedia","matches","orientationInnerWidth","orientationInnerHeight","offsetX","offsetY","scaledImage","loadImage","maxWidth","maxHeight","downsamplingRatio","pixelRatio","devicePixelRatio","imageSmoothingEnabled","imageSmoothingQuality","canvas","parseInt","style","onorientationchange","this","setTimeout","backgroundImageUpload","canvasStageData","toDataURL","mimeType","saveAs","handleImageUpload","file","files","img","changeOffset","orientation","saveImage","className","stageContainerBeforeUpload","visible","viewClassName","browserViewAfterUpload","browserViewBeforeUpload","singleButtonContainerAfterUpload","singleButtonContainerBeforeUpload","buttonAfterUpload","buttonBeforeUpload","htmlFor","type","accept","src","uploadImage","hidden","singleButtonContainerAfterUploadMobile","action","process","name","value","addToCart","backButton","onlineStoreUrl","longArrowLeft","Boolean","hostname","match","cache","InMemoryCache","console","log","httpLink","HttpLink","uri","middlewareLink","setContext","headers","client","ApolloClient","link","concat","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.41ad0328.chunk.js","sourcesContent":["import React from 'react';\nimport useImage from 'use-image';\nimport { Stage, Layer, Transformer, Image as KonvaImage } from 'react-konva';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport * as loadImage from 'blueimp-load-image';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { saveAs } from 'file-saver';\nimport addToCart from './icons/cart-arrow-down.svg';\nimport longArrowLeft from './icons/long-arrow-left.svg';\nimport uploadImage from './icons/upload-image.svg';\nimport { BrowserView, MobileView, isMobile } from 'react-device-detect';\n\nconst useStyles = makeStyles({\n  outerContainer: {\n    height: '100vh',\n    display: 'flex',\n  },\n  stageContainerAfterUpload: {\n    width: '100%',\n    alignContent: 'center',\n    alignItems: 'center',\n  },\n  mobileViewBeforeUpload: {\n    width: '100%',\n    alignContent: 'center',\n    alignItems: 'center',\n  },\n  buttonContainerAfterUpload: {\n    width: '100%',\n    position: 'absolute',\n    bottom: 0,\n    display: 'flex',\n    justifyContent: 'space-evenly',\n  },\n  buttonContainerAfterUploadMobile: {\n    height: '70px',\n    width: '100%',\n    position: 'absolute',\n    bottom: 0,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-evenly',\n  },\n  mobileViewAfterUpload: {\n    height: '70px',\n    width: '100%',\n    position: 'absolute',\n    bottom: 0,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-evenly',\n  },\n  buttonContainerAfterUpload: {\n    width: '100%',\n    position: 'absolute',\n    bottom: 0,\n    display: 'flex',\n    justifyContent: 'space-evenly',\n  },\n  browserViewAfterUpload: {\n    width: '100%',\n    position: 'absolute',\n    bottom: 0,\n    display: 'flex',\n    justifyContent: 'space-evenly',\n  },\n  buttonContainerBeforeUpload: {\n    width: '100%',\n  },\n  singleButtonContainerBeforeUpload: {\n    height: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n  },\n  browserViewBeforeUpload: {\n    height: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n  },\n  singleButtonContainerAfterUpload: {\n    width: '48%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  singleButtonContainerAfterUploadMobile: {\n    width: '50%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  buttonAfterUpload: {\n    background: '#252a2b',\n    fontFamily: 'sans-serif',\n    fontStyle: 'normal',\n    color: 'white',\n    border: '2px solid transparent',\n    fontWeight: 700,\n    textTransform: 'uppercase',\n    cursor: 'pointer',\n    borderRadius: 0,\n    padding: '15px 30px',\n    textAlign: 'center',\n    width: '100%',\n    alignSelf: 'stretch',\n  },\n  buttonBeforeUpload: {\n    background: '#252a2b',\n    fontFamily: 'sans-serif',\n    fontStyle: 'normal',\n    color: 'white',\n    border: '2px solid transparent',\n    fontWeight: 700,\n    textTransform: 'uppercase',\n    cursor: 'pointer',\n    borderRadius: 0,\n    padding: '15px 30px',\n    width: '50%',\n    display: 'flex',\n    alignSelf: 'center',\n    justifyContent: 'center',\n  },\n  hidden: {\n    visibility: 'hidden',\n  },\n  backButton: {\n    dispay: 'flex',\n    position: 'absolute',\n  },\n});\n\nconst Lamp = ({\n  backgroundImage,\n  data,\n  shapeProps,\n  isSelected,\n  onSelect,\n  onChange,\n}) => {\n  const [lampUrl, setLampUrl] = React.useState(null);\n  let lampHeight;\n  let lampWidth;\n  if (\n    data &&\n    data.node &&\n    data.node.images &&\n    data.node.images.edges.length !== 0 &&\n    lampUrl === null\n  ) {\n    data.node.images.edges.forEach((product) => {\n      if (product.node.altText === 'collage') {\n        setLampUrl(product.node.originalSrc);\n      }\n    });\n  }\n  const [image] = useImage(lampUrl, 'Anonymous');\n  if (\n    image &&\n    shapeProps &&\n    shapeProps.height === null &&\n    shapeProps.width === null\n  ) {\n    const aspectRatio = image.width / image.height;\n    if (backgroundImage) {\n      if (\n        backgroundImage.height > backgroundImage.width &&\n        window.innerHeight > window.innerWidth\n      ) {\n        lampHeight = window.innerHeight / 4;\n      } else if (\n        backgroundImage.height > backgroundImage.width &&\n        window.innerHeight < window.innerWidth\n      ) {\n        lampHeight = window.innerHeight / 3;\n      } else if (\n        backgroundImage.height < backgroundImage.width &&\n        window.innerHeight > window.innerWidth\n      ) {\n        lampHeight = window.innerHeight / 6;\n      } else {\n        lampHeight = window.innerHeight / 3;\n      }\n      lampWidth = lampHeight * aspectRatio;\n      shapeProps.width = lampWidth;\n      shapeProps.height = lampHeight;\n    }\n  }\n  const shapeRef = React.useRef();\n  const trRef = React.useRef();\n  React.useEffect(() => {\n    if (isSelected) {\n      trRef.current.setNode(shapeRef.current);\n      trRef.current.getLayer().batchDraw();\n    }\n  }, [isSelected]);\n\n  return (\n    <React.Fragment>\n      <KonvaImage\n        crossOrigin=\"anonymous\"\n        fill=\"\"\n        image={image}\n        onTap={onSelect}\n        onClick={onSelect}\n        ref={shapeRef}\n        {...shapeProps}\n        draggable\n        onDragEnd={(e) => {\n          onChange({\n            ...shapeProps,\n            x: e.target.x(),\n            y: e.target.y(),\n          });\n        }}\n        onTransformEnd={(e) => {\n          const node = shapeRef.current;\n          const scaleX = node.scaleX();\n          const scaleY = node.scaleY();\n\n          node.scaleX(1);\n          node.scaleY(1);\n          onChange({\n            ...shapeProps,\n            x: node.x(),\n            y: node.y(),\n            width: Math.max(5, node.width() * scaleX),\n            height: Math.max(node.height() * scaleY),\n          });\n        }}\n      />\n      {isSelected && (\n        <Transformer\n          enabledAnchors={[\n            'top-left',\n            'top-right',\n            'bottom-left',\n            'bottom-right',\n          ]}\n          ref={trRef}\n          boundBoxFunc={(oldBox, newBox) => {\n            if (newBox.width < 5 || newBox.height < 5) {\n              return oldBox;\n            }\n            return newBox;\n          }}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n\nconst PictureCollage = () => {\n  const queryString = window.location.search;\n  const urlParams = new URLSearchParams(queryString);\n  let productVariantId = urlParams.get('product_variant_id');\n  let productId;\n  let variantQuery;\n  let productQuery;\n  if (productVariantId) {\n    const productVariantIdQuery = btoa(\n      'gid://shopify/ProductVariant/' + productVariantId\n    );\n    variantQuery = gql`\n      query query {\n        node(id: \"${productVariantIdQuery}\") {\n          ... on ProductVariant {\n            id\n            product{\n              id\n            }\n          }\n        }\n      }\n    `;\n  } else {\n    variantQuery = gql`\n      query query {\n        shop {\n          name\n        }\n      }\n    `;\n  }\n  const { data: variantData } = useQuery(variantQuery);\n  if (variantData && variantData.node) {\n    productId = variantData.node.product.id;\n  }\n  if (productId) {\n    productQuery = gql`\n      query query {\n        node(id: \"${productId}\") {\n          ... on Product {\n            onlineStoreUrl\n            images(first: 100) {\n              edges {\n                node {\n                  originalSrc\n                  altText\n                }\n              }\n            }\n          }\n        }\n      }\n    `;\n  } else {\n    productQuery = gql`\n      query query {\n        shop {\n          name\n        }\n      }\n    `;\n  }\n\n  const classes = useStyles();\n  const { data } = useQuery(productQuery);\n  const canvasStage = React.createRef();\n  let newImage = new Image();\n\n  const [backgroundImage, setBackgroundImage] = React.useState(null);\n  const [image, setImage] = React.useState(null);\n  const [selected, setSelected] = React.useState(true);\n  const [savePicture, setSavePicture] = React.useState(false);\n  const [innerWidth, setInnerWidth] = React.useState(window.innerWidth);\n  const [innerHeight, setInnerHeight] = React.useState(window.innerHeight);\n  const [shape, setShape] = React.useState(null);\n  const [currentOrientation, setCurrentOrientation] = React.useState(null);\n  const [offset, setOffset] = React.useState(null);\n  const [backgroundCanvasWidth, setBackgroundCanvasWidth] = React.useState(\n    null\n  );\n  const [backgroundCanvasHeight, setBackgroundCanvasHeight] = React.useState(\n    null\n  );\n\n  function changeOffset(scaledImage) {\n    //The picture gets put in the center of the screen with offset\n    //orientationInnerHeight (width) - scaledImage.height (width) gets the full blank space\n    //and  \"/2\" makes the space even on either side\n    let offsetX;\n    let offsetY;\n    if (scaledImage.width / window.devicePixelRatio < window.innerWidth) {\n      offsetX =\n        (window.innerWidth - scaledImage.width / window.devicePixelRatio) / 2;\n    }\n    if (scaledImage.height / window.devicePixelRatio < window.innerHeight) {\n      offsetY =\n        (window.innerHeight - scaledImage.height / window.devicePixelRatio) / 2;\n    }\n    setOffset({ x: offsetX, y: offsetY });\n    setShape({\n      x: offsetX,\n      y: offsetY,\n      width: null,\n      height: null,\n    });\n  }\n\n  function changeOrientation() {\n    //Gets the current orientation before the phone rotates, so true means that the phone will be in landscape afterwards\n    const orientation = window.matchMedia('(orientation: portrait)');\n    if (orientation.matches === true) {\n      setCurrentOrientation('landscape');\n    } else {\n      setCurrentOrientation('portrait');\n    }\n    //The innerWidth is from before the rotation, so the width of the image has to be set to the innerHeight\n    const orientationInnerWidth = window.innerWidth;\n    const orientationInnerHeight = window.innerHeight;\n    if (backgroundImage) {\n      const scaledImage = loadImage.scale(backgroundImage, {\n        maxWidth: orientationInnerWidth,\n        maxHeight: orientationInnerHeight,\n        downsamplingRatio: 0.2,\n        pixelRatio: window.devicePixelRatio,\n        imageSmoothingEnabled: true,\n        imageSmoothingQuality: 'high',\n        canvas: true,\n      });\n      setImage(scaledImage);\n      setBackgroundCanvasWidth(parseInt(scaledImage.style.width, 10));\n      setBackgroundCanvasHeight(parseInt(scaledImage.style.height, 10));\n      let offsetX;\n      let offsetY;\n      if (scaledImage.width / window.devicePixelRatio < orientationInnerWidth) {\n        offsetX =\n          (orientationInnerWidth -\n            scaledImage.width / window.devicePixelRatio) /\n          2;\n      }\n      if (\n        scaledImage.height / window.devicePixelRatio <\n        orientationInnerHeight\n      ) {\n        offsetY =\n          (orientationInnerHeight -\n            scaledImage.height / window.devicePixelRatio) /\n          2;\n      }\n      setOffset({ x: offsetX, y: offsetY });\n      setShape({\n        x: offsetX,\n        y: offsetY,\n        width: null,\n        height: null,\n      });\n    }\n    //Sets the innerHeight for after the rotation\n    setInnerHeight(orientationInnerHeight);\n    setInnerWidth(orientationInnerWidth);\n  }\n\n  React.useEffect(() => {\n    window.onorientationchange = function () {\n      //Checks if the screen was rotated\n      //timeout implemented to check if the phone was rotated 180° which is sometimes not noticed by\n      //window.onorientationChange\n      this.setTimeout(() => {\n        if (window.innerHeight !== innerHeight) {\n          changeOrientation();\n        }\n      }, 400);\n    };\n  }, [backgroundImage, newImage]);\n\n  let backgroundImageUpload = false;\n  if (backgroundImage !== null) {\n    backgroundImageUpload = true;\n  }\n\n  React.useEffect(() => {\n    if (!selected && savePicture) {\n      let canvasStageSave = canvasStage.current;\n      const canvasStageData = canvasStageSave.toDataURL({\n        pixelRatio: window.devicePixelRatio,\n        mimeType: 'image/png',\n      });\n      saveAs(canvasStageData, 'collage.png');\n      setSavePicture(false);\n    }\n  }, [savePicture]);\n\n  const handleImageUpload = (e) => {\n    const [file] = e.target.files;\n    if (file) {\n      loadImage(\n        file,\n        (img) => {\n          const scaledImage = loadImage.scale(img, {\n            maxWidth: innerWidth,\n            maxHeight: innerHeight,\n            downsamplingRatio: 0.2,\n            pixelRatio: window.devicePixelRatio,\n            imageSmoothingEnabled: true,\n            imageSmoothingQuality: 'high',\n            canvas: true,\n          });\n          setImage(scaledImage);\n          setBackgroundImage(img);\n          changeOffset(scaledImage);\n          if (\n            scaledImage.style &&\n            scaledImage.style.height &&\n            scaledImage.style.width\n          ) {\n            setBackgroundCanvasHeight(parseInt(scaledImage.style.height, 10));\n            setBackgroundCanvasWidth(parseInt(scaledImage.style.width, 10));\n          } else if (scaledImage.style && scaledImage.style.height) {\n            setBackgroundCanvasHeight(parseInt(scaledImage.style.height, 10));\n            setBackgroundCanvasWidth(scaledImage.width);\n          } else if (scaledImage.style && scaledImage.style.width) {\n            setBackgroundCanvasHeight(scaledImage.height);\n            setBackgroundCanvasWidth(parseInt(scaledImage.style.width, 10));\n          } else {\n            setBackgroundCanvasHeight(scaledImage.height);\n            setBackgroundCanvasWidth(scaledImage.width);\n          }\n        },\n        {\n          orientation: true,\n        }\n      );\n    }\n  };\n\n  const saveImage = () => {\n    setSelected(false);\n    setSavePicture(true);\n  };\n\n  if (window.matchMedia(`(orientation: ${currentOrientation} )`) === false) {\n    changeOrientation();\n  }\n\n  return (\n    <div className={classes.outerContainer}>\n      <div\n        className={\n          backgroundImageUpload\n            ? classes.stageContainerAfterUpload\n            : classes.stageContainerBeforeUpload\n        }\n      >\n        <Stage\n          visible={backgroundImageUpload}\n          ref={canvasStage}\n          width={innerWidth}\n          height={innerHeight}\n        >\n          <Layer\n            onClick={() => {\n              setSelected(false);\n            }}\n            onTap={() => {\n              setSelected(false);\n            }}\n          >\n            <KonvaImage\n              width={backgroundCanvasWidth}\n              height={backgroundCanvasHeight}\n              x={shape ? offset.x : 0}\n              y={shape ? offset.y : 0}\n              image={image}\n            />\n          </Layer>\n          <Layer visible={backgroundImageUpload}>\n            <Lamp\n              backgroundImage={image}\n              data={data}\n              shapeProps={shape}\n              isSelected={selected}\n              onSelect={() => {\n                setSelected(true);\n              }}\n              onChange={setShape}\n            />\n          </Layer>\n        </Stage>\n      </div>\n      <BrowserView\n        viewClassName={\n          backgroundImageUpload\n            ? classes.browserViewAfterUpload\n            : classes.browserViewBeforeUpload\n        }\n      >\n        <div\n          className={\n            backgroundImageUpload\n              ? classes.singleButtonContainerAfterUpload\n              : classes.singleButtonContainerBeforeUpload\n          }\n        >\n          <label\n            className={\n              backgroundImageUpload\n                ? classes.buttonAfterUpload\n                : classes.buttonBeforeUpload\n            }\n            htmlFor=\"files\"\n          >\n            Bild hochladen\n            <input\n              id=\"files\"\n              visibility=\"hidden\"\n              type=\"file\"\n              accept=\"image/*\"\n              style={{ display: 'none' }}\n              onChange={handleImageUpload}\n            />\n          </label>\n        </div>\n        <div\n          style={!backgroundImageUpload ? { display: 'none' } : null}\n          className={classes.singleButtonContainerAfterUpload}\n        >\n          <label className={classes.buttonAfterUpload} onClick={saveImage}>\n            Bild Speichern\n          </label>\n        </div>\n      </BrowserView>\n      <MobileView\n        viewClassName={\n          backgroundImageUpload\n            ? classes.mobileViewAfterUpload\n            : classes.mobileViewBeforeUpload\n        }\n        style={{\n          bottom: (window.innerHeight - backgroundCanvasHeight) / 4 - 35,\n        }}\n      >\n        {backgroundImageUpload ? (\n          <div>\n            <label htmlFor=\"files\">\n              <img\n                src={uploadImage}\n                style={{ height: '45px', width: '45px' }}\n              />\n              <input\n                id=\"files\"\n                visibility=\"hidden\"\n                type=\"file\"\n                accept=\"image/*\"\n                style={{ display: 'none' }}\n                onChange={handleImageUpload}\n              />\n            </label>\n          </div>\n        ) : (\n          <div\n            className={\n              backgroundImageUpload\n                ? classes.hidden\n                : classes.singleButtonContainerBeforeUpload\n            }\n          >\n            <label\n              className={\n                backgroundImageUpload\n                  ? classes.buttonAfterUpload\n                  : classes.buttonBeforeUpload\n              }\n              htmlFor=\"files\"\n            >\n              Bild hochladen\n              <input\n                id=\"files\"\n                visibility=\"hidden\"\n                type=\"file\"\n                accept=\"image/*\"\n                style={{ display: 'none' }}\n                onChange={handleImageUpload}\n              />\n            </label>\n          </div>\n        )}\n        <div\n          style={!backgroundImageUpload ? { display: 'none' } : null}\n          className={classes.singleButtonContainerAfterUploadMobile}\n        >\n          <label className={classes.buttonAfterUpload} onClick={saveImage}>\n            Bild Speichern\n          </label>\n        </div>\n        <div style={!backgroundImageUpload ? { display: 'none' } : null}>\n          <form\n            action={\n              data && data.node\n                ? `${process.env.REACT_APP_SHOPIFY_URI}cart/add`\n                : process.env.REACT_APP_SHOPIFY_URI\n            }\n          >\n            <input\n              type=\"hidden\"\n              name=\"id\"\n              value={productVariantId ? productVariantId : ''}\n            />\n            <button\n              type=\"submit\"\n              style={{ border: 'none', background: 'transparent' }}\n            >\n              <img src={addToCart} style={{ height: '45px', width: '45px' }} />\n            </button>\n          </form>\n        </div>\n      </MobileView>\n      <MobileView\n        viewClassName={classes.backButton}\n        style={!backgroundImageUpload ? { display: 'none' } : null}\n      >\n        <form\n          action={\n            data && data.node\n              ? data.node.onlineStoreUrl\n              : process.env.REACT_APP_SHOPIFY_URI\n          }\n        >\n          <button style={{ border: 'none', background: 'white' }} type=\"submit\">\n            <img\n              src={longArrowLeft}\n              style={{\n                position: 'absolute',\n                height: '50px',\n                width: '50px',\n              }}\n            />\n          </button>\n        </form>\n      </MobileView>\n    </div>\n  );\n};\n\nexport default PictureCollage;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport PictureCollage from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { ApolloClient } from 'apollo-client';\nimport { setContext } from 'apollo-link-context';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { HttpLink } from 'apollo-link-http';\nimport { ApolloProvider } from '@apollo/react-hooks';\n\nconst cache = new InMemoryCache();\n\nconsole.log(process.env.REACT_APP_SHOPIFY_GRAPHQL_URI);\nconst httpLink = new HttpLink({\n  uri: process.env.REACT_APP_SHOPIFY_GRAPHQL_URI,\n});\n\nconst middlewareLink = setContext(() => ({\n  headers: {\n    'X-Shopify-Storefront-Access-Token':\n      process.env.REACT_APP_SHOPIFY_STOREFRONT_ACCESS_TOKEN,\n  },\n}));\n\nconst client = new ApolloClient({\n  link: middlewareLink.concat(httpLink),\n  cache,\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <PictureCollage />\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/cart-arrow-down.a1da4642.svg\";","module.exports = __webpack_public_path__ + \"static/media/long-arrow-left.5bf916de.svg\";","module.exports = __webpack_public_path__ + \"static/media/upload-image.3e046b57.svg\";"],"sourceRoot":""}